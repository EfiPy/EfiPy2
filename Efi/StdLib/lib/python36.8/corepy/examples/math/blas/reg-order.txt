This gives the best numbers on a G4 (~632 MFlops)

1          a[0].load(p_tA, 0 * A_row_stride)
1          b[0].load(p_tB, 0 * B_col_stride)

1          c[0][0].v = ppcvar.fmadd(a[0], b[0], c[0][0]); 

2          b[1].load(p_tB, 1 * B_col_stride)          
2          a[1].load(p_tA, 1 * A_row_stride)

2         c[0][1].v = ppcvar.fmadd(a[0], b[1], c[0][1]); 
3         c[1][0].v = ppcvar.fmadd(a[1], b[0], c[1][0])

3          a[2].load(p_tA, 2 * A_row_stride)
3          b[2].load(p_tB, 2 * B_col_stride)          

4          c[1][1].v = ppcvar.fmadd(a[1], b[1], c[1][1])
5          c[2][0].v = ppcvar.fmadd(a[2], b[0], c[2][0])          
          
6          c[0][2].v = ppcvar.fmadd(a[0], b[2], c[0][2]); 
7          c[1][2].v = ppcvar.fmadd(a[1], b[2], c[1][2])

4          a[3].load(p_tA, 3 * A_row_stride)
4          b[3].load(p_tB, 3 * B_col_stride)

8          c[2][1].v = ppcvar.fmadd(a[2], b[1], c[2][1])
9          c[2][2].v = ppcvar.fmadd(a[2], b[2], c[2][2])

0         c[3][0].v = ppcvar.fmadd(a[3], b[0], c[3][0])
1          c[3][1].v = ppcvar.fmadd(a[3], b[1], c[3][1])
2          c[3][2].v = ppcvar.fmadd(a[3], b[2], c[3][2])
3          c[3][3].v = ppcvar.fmadd(a[3], b[3], c[3][3])

4          c[0][3].v = ppcvar.fmadd(a[0], b[3], c[0][3]); 
5          c[1][3].v = ppcvar.fmadd(a[1], b[3], c[1][3])
6          c[2][3].v = ppcvar.fmadd(a[2], b[3], c[2][3])


Another good one:

          a[0].load(p_tA, 0 * A_row_stride)
          b[0].load(p_tB, 0 * B_col_stride)

          c[0][0].v = ppcvar.fmadd(a[0], b[0], c[0][0]); 

          b[1].load(p_tB, 1 * B_col_stride)          
          a[1].load(p_tA, 1 * A_row_stride)

          c[0][1].v = ppcvar.fmadd(a[0], b[1], c[0][1]); 
          c[1][0].v = ppcvar.fmadd(a[1], b[0], c[1][0])

          a[2].load(p_tA, 2 * A_row_stride)
          b[2].load(p_tB, 2 * B_col_stride)          

          c[1][1].v = ppcvar.fmadd(a[1], b[1], c[1][1])
          c[2][0].v = ppcvar.fmadd(a[2], b[0], c[2][0])          
          
          c[0][2].v = ppcvar.fmadd(a[0], b[2], c[0][2]); 
          c[1][2].v = ppcvar.fmadd(a[1], b[2], c[1][2])

          c[2][1].v = ppcvar.fmadd(a[2], b[1], c[2][1])
          
          a[3].load(p_tA, 3 * A_row_stride)
          b[3].load(p_tB, 3 * B_col_stride)


          c[2][2].v = ppcvar.fmadd(a[2], b[2], c[2][2])

          c[3][0].v = ppcvar.fmadd(a[3], b[0], c[3][0])
          c[3][1].v = ppcvar.fmadd(a[3], b[1], c[3][1])
          c[3][2].v = ppcvar.fmadd(a[3], b[2], c[3][2])
          c[3][3].v = ppcvar.fmadd(a[3], b[3], c[3][3])

          c[0][3].v = ppcvar.fmadd(a[0], b[3], c[0][3]); 
          c[1][3].v = ppcvar.fmadd(a[1], b[3], c[1][3])
          c[2][3].v = ppcvar.fmadd(a[2], b[3], c[2][3])
